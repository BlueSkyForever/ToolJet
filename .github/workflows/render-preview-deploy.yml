name: Render review deploy
on:
  pull_request:
    types: [labeled, closed]
env:
  PR_NUMBER: ${{ github.event.number }}
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  create-review-app:
    if: ${{ github.event.label.name == 'create-review-app' }}
    runs-on: ubuntu-latest

    steps:
      - name: Create deployment
        id: create-deployment
        run: |
          export SERVICE_ID=$(curl --request POST \
          --url https://api.render.com/v1/services \
          --header 'accept: application/json' \
          --header 'content-type: application/json' \
          --header 'Authorization: Bearer ${{ secrets.RENDER_API_KEY }}' \
          --data '
          {
            "autoDeploy": "yes",
            "branch": "${{ env.BRANCH_NAME }}",
            "name": "ToolJet PR #${{ env.PR_NUMBER }}",
            "notifyOnFail": "default",
            "ownerId": "tea-caeo4bj19n072h3dddc0",
            "repo": "https://github.com/ToolJet/ToolJet",
            "slug": "tooljet-pr-${{ env.PR_NUMBER }}",
            "suspended": "not_suspended",
            "suspenders": [],
            "type": "web_service",
            "envVars": [
              {
                "key": "DATABASE_URL",
                "value": "postgres://sherfin:WJn2FAqQx9CQtOy6vFMBsppmimNEGKaB@dpg-cdl9s3aen0hh1kmjb5eg-a/db-${{ env.PR_NUMBER }}"
              },
              {
                "key": "PORT",
                "value": "80"
              },
              {
                "key": "TOOLJET_HOST",
                "value": "https://tooljet-pr-${{ env.PR_NUMBER }}.onrender.com"
              },
              {
                "key": "DEPLOYMENT_PLATFORM",
                "value": "render"
              },
              {
                "key": "DISABLE_TOOLJET_TELEMETRY",
                "value": "true"
              },
              {
                "key": "LOCKBOX_MASTER_KEY",
                "value": "LOCKBOX_MASTER_KEY"
              },
              {
                "key": "SECRET_KEY_BASE",
                "value": "SECRET_KEY_BASE"
              },
              {
                "key": "SMTP_ADDRESS",
                "value": "smtp.mailtrap.io"
              },
              {
                "key": "SMTP_DOMAIN",
                "value": "smtp.mailtrap.io"
              },
              {
                "key": "SMTP_PASSWORD",
                "value": "a7e4196f923e01"
              },
              {
                "key": "SMTP_PORT",
                "value": "2525"
              },
              {
                "key": "SMTP_USERNAME",
                "value": "a06f6062d937bf"
              }
            ],
            "serviceDetails": {
              "disk": null,
              "env": "docker",
              "envSpecificDetails": {
                "dockerCommand": "",
                "dockerContext": "./",
                "dockerfilePath": "./docker/preview.Dockerfile"
                },
                "healthCheckPath": "/api/health",
                "numInstances": 1,
                "openPorts": [{
                "port": 80,
                "protocol": "TCP"
                }],
                "plan": "starter",
                "pullRequestPreviewsEnabled": "no",
                "region": "oregon",
                "url": "https://tooljet-pr-${{ env.PR_NUMBER }}.onrender.com"
            }
          }' | \
          jq -r '.service.id')

          echo "SERVICE_ID=$SERVICE_ID" >> $GITHUB_ENV
          echo "Web service created: $SERVICE_ID"

      # Will exhaust pipeline minutes
      # - name: Check deployment healthy
      #   run: |
      #     sleep 10
      #     curl \
      #     --write-out '%{http_code}' \
      #     --silent --output /dev/null \
      #     --connect-timeout 30 \
      #     --retry 60 \
      #     --retry-delay 5 \
      #     https://tooljet-pr-${{ env.PR_NUMBER }}.onrender.com/api/health

      - name: Comment deployment URL
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Deployment: https://tooljet-pr-${{ env.PR_NUMBER }}.onrender.com \n Dashboard: https://dashboard.render.com/web/${{ env.SERVICE_ID }}'
            })

      - uses: andymckay/labeler@1.0.2
        with:
          remove-labels: "create-review-app"
          add-labels: "review-app-deployed"

  destroy-review-app:
    if: ${{ github.event.label.name == 'destroy-review-app' || github.event.action == 'closed' }}
    runs-on: ubuntu-latest

    steps:
      - name: Fetch service id
        run: |
          export SERVICE_ID=$(curl --request GET \
          --url 'https://api.render.com/v1/services?name=ToolJet%20PR%20%23${{ env.PR_NUMBER }}&limit=1' \
          --header 'accept: application/json' \
          --header 'authorization: Bearer ${{ secrets.RENDER_API_KEY }}' | \
           jq -r '.[0].service.id')

          curl --request DELETE \
          --url https://api.render.com/v1/services/$SERVICE_ID \
          --header 'accept: application/json' \
          --header 'authorization: Bearer ${{ secrets.RENDER_API_KEY }}'

      - uses: andymckay/labeler@1.0.2
        with:
          remove-labels: "review-app-deployed, destroy-review-app"
