name: Cypress E2E Test

on:
  pull_request_target:
    types: [labeled, unlabeled, closed]

  workflow_dispatch:

env:
  PR_NUMBER: ${{ github.event.number }}
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  Cypress-App-Builder:
    runs-on: ubuntu-22.04

    if: ${{ github.event.action == 'labeled' && (github.event.label.name == 'run-cypress-app-builder')}}

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Install PostgreSQL client
        run: |
          sudo apt update
          sudo apt install postgresql-client -y

      - name: Start PostgreSQL service
        run: sudo service postgresql start

      - name: Check PostgreSQL service status
        run: sudo service postgresql status

      - name: Create PostgreSQL User
        run: |
          sudo -u postgres psql -c "CREATE USER cypress PASSWORD 'cypress' CREATEDB;"

      - name: Create PostgreSQL Database
        run: |
          sudo -u postgres createdb -O cypress tooljet_development

      - name: Set up Docker
        uses: docker-practice/actions-setup-docker@master

      - name: Run PostgREST Docker Container
        run: |
          docker run -d -p 3001:3000 \
            -e PGRST_DB_URI="postgres://postgres:postgres@host.docker.internal:5432/tooljet_new_db" \
            -e PGRST_DB_ANON_ROLE="postgres" \
            -e PGRST_JWT_SECRET="r9iMKoe5CRMgvJBBtp4HrqN7QiPpUToj" \
            postgrest/postgrest

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: checking the node version
        run: |
          node -v
          npm -v

      - name: Install and build dependencies
        run: |
          npm cache clean --force
          npm install
          npm install --prefix server
          npm install --prefix frontend
          npm run build:plugins

      - name: Set up environment variables
        run: |
          echo "TOOLJET_HOST=https://http://localhost:8082" >> .env
          echo "LOCKBOX_MASTER_KEY=cd97331a419c09387bef49787f7da8d2a81d30733f0de6bed23ad8356d2068b2" >> .env
          echo "SECRET_KEY_BASE=7073b9a35a15dd20914ae17e36a693093f25b74b96517a5fec461fc901c51e011cd142c731bee48c5081ec8bac321c1f259ef097ef2a16f25df17a3798c03426" >> .env
          echo "PG_DB=tooljet_development" >> .env
          echo "PG_USER=cypress" >> .env
          echo "PG_HOST=localhost" >> .env
          echo "PG_PASS=cypress" >> .env
          echo "PG_PORT=5432" >> .env
          echo "ENABLE_TOOLJET_DB=true" >> .env
          echo "PGRST_JWT_SECRET=r9iMKoe5CRMgvJBBtp4HrqN7QiPpUToj" >> .env
          echo "PGRST_HOST=http://localhost:3001" >> .env
          echo "TOOLJET_DB=tooljet_db" >> .env
          echo "TOOLJET_DB_USER=cypress" >> .env

      - name: Set up database
        run: |
          npm run --prefix server db:reset
          npm run --prefix server db:seed

      - name: Run plugins compilation in watch mode
        run: cd plugins && npm start &

      - name: Run the server
        run: cd server && npm run start:dev &

      - name: Run the client
        run: cd frontend && npm start &

      - name: Wait for the server to be ready
        run: |
          timeout 1500 bash -c '
          until curl --silent --fail http://localhost:8082; do
            sleep 5
          done'

      - name: Create Cypress environment file
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "cypress.env.json"
          json: ${{ secrets.CYPRESS_SECRETS }}
          dir: "./cypress-tests"

      - name: Update "database" value in cypress.env.json
        run: |
          # Set the new value for the "database" field
          new_database_value="${{ env.PR_NUMBER }}_cypress"

          # Read the content of cypress.env.json and update the "database" field using jq
          cat ./cypress-tests/cypress.env.json | jq --arg new_value "$new_database_value" '.app_db.database = $new_value' > tmp_cypress.env.json

          # Move the updated file back to the original location
          mv tmp_cypress.env.json ./cypress-tests/cypress.env.json

      - name: App builder
        if: ${{ github.event.label.name == 'run-cypress-app-builder' }}
        uses: cypress-io/github-action@v5
        with:
          working-directory: ./cypress-tests
          config: "baseUrl=http://localhost:8082"
          config-file: cypress-app-builder.config.js

      - name: Capture Screenshots
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: screenshots
          path: cypress-tests/cypress/screenshots

  Cypress-Platform:
    runs-on: ubuntu-22.04

    if: ${{ github.event.action == 'labeled' && (github.event.label.name == 'run-cypress-workspace')}}

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Install PostgreSQL client
        run: |
          sudo apt update
          sudo apt install postgresql-client -y

      - name: Start PostgreSQL service
        run: sudo service postgresql start

      - name: Check PostgreSQL service status
        run: sudo service postgresql status

      - name: Create PostgreSQL User
        run: |
          sudo -u postgres psql -c "CREATE USER cypress PASSWORD 'cypress' CREATEDB;"

      - name: Create PostgreSQL Database
        run: |
          sudo -u postgres createdb -O cypress tooljet_development

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: checking the node version
        run: |
          node -v
          npm -v

      - name: Install and build dependencies
        run: |
          npm cache clean --force
          npm install
          npm install --prefix server
          npm install --prefix frontend
          npm run build:plugins

      - name: Set up environment variables
        run: |
          echo "TOOLJET_HOST=https://http://localhost:8082" >> .env
          echo "LOCKBOX_MASTER_KEY=cd97331a419c09387bef49787f7da8d2a81d30733f0de6bed23ad8356d2068b2" >> .env
          echo "SECRET_KEY_BASE=7073b9a35a15dd20914ae17e36a693093f25b74b96517a5fec461fc901c51e011cd142c731bee48c5081ec8bac321c1f259ef097ef2a16f25df17a3798c03426" >> .env
          echo "PG_DB=tooljet_development" >> .env
          echo "PG_USER=cypress" >> .env
          echo "PG_HOST=localhost" >> .env
          echo "PG_PASS=cypress" >> .env
          echo "PG_PORT=5432" >> .env

      - name: Set up database
        run: |
          npm run --prefix server db:reset
          npm run --prefix server db:seed

      - name: Run plugins compilation in watch mode
        run: cd plugins && npm start &

      - name: Run the server
        run: cd server && npm run start:dev &

      - name: Run the client
        run: cd frontend && npm start &

      - name: Wait for the server to be ready
        run: |
          timeout 1500 bash -c '
          until curl --silent --fail http://localhost:8082; do
            sleep 5
          done'

      - name: Create Cypress environment file
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "cypress.env.json"
          json: ${{ secrets.CYPRESS_SECRETS }}
          dir: "./cypress-tests"

      - name: Update "database" value in cypress.env.json
        run: |
          # Set the new value for the "database" field
          new_database_value="${{ env.PR_NUMBER }}_cypress"

          # Read the content of cypress.env.json and update the "database" field using jq
          cat ./cypress-tests/cypress.env.json | jq --arg new_value "$new_database_value" '.app_db.database = $new_value' > tmp_cypress.env.json

          # Move the updated file back to the original location
          mv tmp_cypress.env.json ./cypress-tests/cypress.env.json

      - name: App builder
        if: ${{ github.event.label.name == 'run-cypress-workspace' }}
        uses: cypress-io/github-action@v5
        with:
          working-directory: ./cypress-tests
          config: "baseUrl=http://localhost:8082"
          config-file: cypress-worksapce.config.js

      - name: Capture Screenshots
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: screenshots
          path: cypress-tests/cypress/screenshots

  Cypress-Marketplace:
    runs-on: ubuntu-22.04

    if: ${{ github.event.action == 'labeled' && (github.event.label.name == 'run-cypress-marketplace')}}

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.3.0

      - name: Install PostgreSQL client
        run: |
          sudo apt update
          sudo apt install postgresql-client -y

      - name: Start PostgreSQL service
        run: sudo service postgresql start

      - name: Check PostgreSQL service status
        run: sudo service postgresql status

      - name: Create PostgreSQL User
        run: |
          sudo -u postgres psql -c "CREATE USER cypress PASSWORD 'cypress' CREATEDB;"

      - name: Create PostgreSQL Database
        run: |
          sudo -u postgres createdb -O cypress tooljet_development

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: checking the node version
        run: |
          node -v
          npm -v

      - name: Install and build dependencies
        run: |
          npm cache clean --force
          npm install
          npm install --prefix server
          npm install --prefix frontend
          npm run build:plugins

      - name: Set up environment variables
        run: |
          echo "TOOLJET_HOST=https://http://localhost:8082" >> .env
          echo "LOCKBOX_MASTER_KEY=cd97331a419c09387bef49787f7da8d2a81d30733f0de6bed23ad8356d2068b2" >> .env
          echo "SECRET_KEY_BASE=7073b9a35a15dd20914ae17e36a693093f25b74b96517a5fec461fc901c51e011cd142c731bee48c5081ec8bac321c1f259ef097ef2a16f25df17a3798c03426" >> .env
          echo "PG_DB=tooljet_development" >> .env
          echo "PG_USER=cypress" >> .env
          echo "PG_HOST=localhost" >> .env
          echo "PG_PASS=cypress" >> .env
          echo "PG_PORT=5432" >> .env

      - name: Set up database
        run: |
          npm run --prefix server db:reset
          npm run --prefix server db:seed

      - name: Run plugins compilation in watch mode
        run: cd plugins && npm start &

      - name: Run the server
        run: cd server && npm run start:dev &

      - name: Run the client
        run: cd frontend && npm start &

      - name: Wait for the server to be ready
        run: |
          timeout 1500 bash -c '
          until curl --silent --fail http://localhost:8082; do
            sleep 5
          done'

      - name: Create Cypress environment file
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "cypress.env.json"
          json: ${{ secrets.CYPRESS_SECRETS }}
          dir: "./cypress-tests"

      - name: Update "database" value in cypress.env.json
        run: |
          # Set the new value for the "database" field
          new_database_value="${{ env.PR_NUMBER }}_cypress"

          # Read the content of cypress.env.json and update the "database" field using jq
          cat ./cypress-tests/cypress.env.json | jq --arg new_value "$new_database_value" '.app_db.database = $new_value' > tmp_cypress.env.json

          # Move the updated file back to the original location
          mv tmp_cypress.env.json ./cypress-tests/cypress.env.json

      - name: App builder
        if: ${{ github.event.label.name == 'run-cypress-marketplace' }}
        uses: cypress-io/github-action@v5
        with:
          working-directory: ./cypress-tests
          config: "baseUrl=http://localhost:8082"
          config-file: cypress-marketplace.config.js

      - name: Capture Screenshots
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: screenshots
          path: cypress-tests/cypress/screenshots
