name: Cypress E2E Test

on:
  pull_request_target:
    types: [labeled, unlabeled, closed]

  workflow_dispatch:

env:
  PR_NUMBER: ${{ github.event.number }}
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}


jobs:
  Run-Cypress:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        label: [run-cypress, run-cypress-app-builder, run-cypress-workspace]
        config-file: [cypress-run.config.js, cypress-app-builder.config.js, cypress-workspace.config.js]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up environment variables
        run: |
          echo "TOOLJET_HOST=${{ secrets.TOOLJET_HOST }}" >> .env
          echo "LOCKBOX_MASTER_KEY=${{ secrets.LOCKBOX_MASTER_KEY }}" >> .env
          echo "SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}" >> .env

      - name: Set up environment
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
          source ~/.nvm/nvm.sh
          nvm install 18.3.0
          npm i -g npm@8.11.0
          sudo apt install postgresql postgresql-contrib libpq-dev

      - name: Install and build dependencies
        run: |
          npm install
          npm install --prefix server
          npm install --prefix frontend
          npm run build:plugins

      - name: Set up database
        run: |
          npm run --prefix server db:create
          npm run --prefix server db:reset

      - name: Run plugins compilation in watch mode
        run: cd plugins && npm start

      - name: Run the server
        run: cd server && npm run start:dev

      - name: Run the client
        run: cd frontend && npm start

      - name: Wait for the server to be ready
        run: |
          timeout 1500 bash -c '
          until curl --silent --fail http://localhost:8082; do
            sleep 5
          done'

      - name: Create Cypress environment file
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "cypress.env.json"
          json: ${{ secrets.CYPRESS_SECRETS }}
          dir: './cypress-tests'

      - name: Update "database" value in cypress.env.json
        run: |
          # Set the new value for the "database" field
          new_database_value="${{ env.PR_NUMBER }}_cypress"

          # Read the content of cypress.env.json and update the "database" field using jq
          cat ./cypress-tests/cypress.env.json | jq --arg new_value "$new_database_value" '.app_db.database = $new_value' > tmp_cypress.env.json

          # Move the updated file back to the original location
          mv tmp_cypress.env.json ./cypress-tests/cypress.env.json

      - name: Cypress Integration Test
        if: ${{ github.event.label.name == matrix.label }}
        uses: cypress-io/github-action@v5
        with:
          working-directory: ./cypress-tests
          config: "baseUrl=http://localhost:8082"
          config-file: ${{ matrix.config-file }}

      - name: Capture Screenshots
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: screenshots
          path: cypress-tests/cypress/screenshots
